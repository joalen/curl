name: Run MemorySanitizer

on:
  push:

jobs:
  run-msan:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2 
        with:
          ref: aab0c16990ff4cccbb68ab9fa9c81823b288fdcc

      - name: Install Autoconfigure --> Linux
        if: runner.os == 'Linux'
        run: | 
          sudo apt-get update 
          sudo apt install autoconf automake libtool
                  
      - name: Build repository (Linux)
        if: runner.os == 'Linux'
        run: | 
          autoreconf -i
          export CC=clang
          export CXX=clang++
          export CFLAGS="-fsanitize=memory -fsanitize-memory-track-origins -fPIE -fPIC -g -O2"
          export LDFLAGS="-fsanitize=memory -pie"
          
          ./configure --with-openssl
          sed -i 's/^CC\s*=.*/CC = clang/' Makefile
          sed -i 's/^CXX\s*=.*/CXX = clang++/' Makefile
          sed -i 's/^CFLAGS\s*=.*/& -fsanitize=memory -fsanitize-memory-track-origins -fPIE -fPIC -g -O2/' Makefile
          sed -i 's/^LDFLAGS\s*=.*/& -fsanitize=memory -pie/' Makefile
          sed -i 's/^CPP\s*=.*/CPP = clang -E/' Makefile
          grep -i "memory" Makefile
          make 
                
      - name: Run Google Memory Sanitizer (source code) (Linux)
        if: runner.os == 'Linux'
        run: |
          #!/bin/bash
          set +e 
          
          DIRECTORY=.
          is_executable() {
            local file="$1"
            if file "$file" | grep -q 'ELF 64-bit'; then
              return 0
            else
              return 1
            fi
          }
          run_with_msan() {
            local executable="$1"
            MSAN_OPTIONS="exit_code=1 verbosity=1 halt_on_error=1 print_stats=1" timeout 10s "$executable"
            local exit_status=$?
          }
          find "$DIRECTORY" -type f -executable | while read -r file; do
            if is_executable "$file"; then
              run_with_msan "$file"
            fi
          done
