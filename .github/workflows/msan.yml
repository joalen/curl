name: Run MemorySanitizer

on:
  push:

jobs:
  run-msan:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: aab0c16990ff4cccbb68ab9fa9c81823b288fdcc

      - name: Set up Docker
        run: |
          docker run --name msan-container -v ${{ github.workspace }}:/workspace -w /workspace -d ubuntu:22.04 tail -f /dev/null
          docker exec msan-container apt-get update
          docker exec msan-container apt-get install -y autoconf automake libtool clang llvm build-essential

      - name: Build and run MemorySanitizer
        run: |
          docker exec msan-container bash -c "
            autoreconf -i &&
            ./configure --with-openssl &&
            sed -i 's/^CC\s*=.*/CC = clang/' Makefile &&
            sed -i 's/^CXX\s*=.*/CXX = clang++/' Makefile &&
            sed -i 's/^CFLAGS\s*=.*/& -fsanitize=memory -fsanitize-memory-track-origins -fPIE -fPIC -g -O2/' Makefile &&
            sed -i 's/^LDFLAGS\s*=.*/& -fsanitize=memory -pie/' Makefile &&
            sed -i 's/^CPP\s*=.*/CPP = clang -E/' Makefile &&
            make
          "

      - name: Run MemorySanitizer on executables
        run: |
          docker exec msan-container bash -c "
            set +e 
            DIRECTORY=.
            is_executable() {
              local file=\"\$1\"
              if file \"\$file\" | grep -q 'ELF 64-bit'; then
                return 0
              else
                return 1
              fi
            }
            run_with_msan() {
              local executable=\"\$1\"
              MSAN_OPTIONS=\"exit_code=1 verbosity=1 halt_on_error=1 print_stats=1\" timeout 10s \"\$executable\"
              local exit_status=\$?
            }
            find \"\$DIRECTORY\" -type f -executable | while read -r file; do
              if is_executable \"\$file\"; then
                run_with_msan \"\$file\"
              fi
            done
          "

      - name: Cleanup Docker
        run: |
          docker stop msan-container
          docker rm msan-container
